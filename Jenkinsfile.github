@Library('csm-shared-library') _

def isStable = env.TAG_NAME != null || env.BRANCH_NAME == 'main' ? true : false
pipeline {
  agent {
    label "metal-gcp-builder"
  }

  options {
    buildDiscarder(logRotator(numToKeepStr: "10"))
    timestamps()
  }

  environment {
    BUILD_METADATA = getRpmRevision(isStable: isStable)
    GIT_REPO_NAME = getRepoName()
    GO_VERSION = sh(returnStdout: true, script: 'grep -Eo "^go .*" go.mod | cut -d " " -f2').trim()
  }

  stages {
    stage('Prepare') {
      steps {
        sh "make prepare"
      }
    }

    stage('Build: RPM') {
      agent {
        docker {
          label 'docker'
          image "artifactory.algol60.net/csm-docker/stable/sle15sp3_build_environment_golang:${env.GO_VERSION}"
          registryUrl 'https://artifactory.algol60.net/'
          registryCredentialsId 'artifactory-algol60'
          reuseNode true
          // Run as root
          args "-u root"
        }
      }
      steps {
        sh "make rpm"
      }
    }

    stage('Publish') {
      steps {   
        script {
          publishCsmRpms(component: env.GIT_REPO_NAME, pattern: "dist/rpmbuild/RPMS/x86_64/*.rpm", arch: "x86_64", isStable: isStable)
          publishCsmRpms(component: env.GIT_REPO_NAME, pattern: "dist/rpmbuild/SRPMS/*.rpm", arch: "src", isStable: isStable)
        }
      }
    }
  }
}
